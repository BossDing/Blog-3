<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beautifulsoup.mapper.UserMapper">

    <resultMap id="userMap" type="com.beautifulsoup.bean.db.User">
        <id property="uid" column="uid"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="avatar" column="avatar"/>
        <result property="description" column="description"/>
        <result property="follow" column="follow"/>
        <result property="followed" column="followed"/>
        <result property="phone" column="phone"/>
        <result property="address" column="address"/>
        <collection property="roles" ofType="com.beautifulsoup.bean.db.Role">
            <id property="rid" column="rid"/>
            <result property="rname" column="rname"/>
            <collection property="permissions" ofType="com.beautifulsoup.bean.db.Permission">
                <id property="pid" column="pid"/>
                <result property="name" column="name"/>
                <result property="url" column="url"/>
            </collection>
        </collection>
    </resultMap>

    <resultMap id="BaseResultMap" type="com.beautifulsoup.bean.db.User" >
        <id column="uid" property="uid" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="avatar" property="avatar" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="follow" property="follow" jdbcType="INTEGER" />
        <result column="followed" property="followed" jdbcType="INTEGER" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        uid, username, password, avatar, description, follow, followed, phone, address
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.beautifulsoup.bean.db.UserExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user
        where uid = #{uid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user
        where uid = #{uid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.beautifulsoup.bean.db.UserExample" >
        delete from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.beautifulsoup.bean.db.User" >
        insert into user (uid, username, password,
        avatar, description, follow,
        followed, phone, address
        )
        values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{avatar,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{follow,jdbcType=INTEGER},
        #{followed,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.beautifulsoup.bean.db.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="uid != null" >
                uid,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="avatar != null" >
                avatar,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="follow != null" >
                follow,
            </if>
            <if test="followed != null" >
                followed,
            </if>
            <if test="phone != null" >
                phone,
            </if>
            <if test="address != null" >
                address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="uid != null" >
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null" >
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="follow != null" >
                #{follow,jdbcType=INTEGER},
            </if>
            <if test="followed != null" >
                #{followed,jdbcType=INTEGER},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                #{address,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.beautifulsoup.bean.db.UserExample" resultType="java.lang.Integer" >
        select count(*) from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update user
        <set >
            <if test="record.uid != null" >
                uid = #{record.uid,jdbcType=INTEGER},
            </if>
            <if test="record.username != null" >
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null" >
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.avatar != null" >
                avatar = #{record.avatar,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null" >
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.follow != null" >
                follow = #{record.follow,jdbcType=INTEGER},
            </if>
            <if test="record.followed != null" >
                followed = #{record.followed,jdbcType=INTEGER},
            </if>
            <if test="record.phone != null" >
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null" >
                address = #{record.address,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update user
        set uid = #{record.uid,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        avatar = #{record.avatar,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        follow = #{record.follow,jdbcType=INTEGER},
        followed = #{record.followed,jdbcType=INTEGER},
        phone = #{record.phone,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.beautifulsoup.bean.db.User" >
        update user
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null" >
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="follow != null" >
                follow = #{follow,jdbcType=INTEGER},
            </if>
            <if test="followed != null" >
                followed = #{followed,jdbcType=INTEGER},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.beautifulsoup.bean.db.User" >
        update user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        avatar = #{avatar,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        follow = #{follow,jdbcType=INTEGER},
        followed = #{followed,jdbcType=INTEGER},
        phone = #{phone,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR}
        where uid = #{uid,jdbcType=INTEGER}
    </update>

    <select id="findUserByUsername" parameterType="string" resultMap="userMap">
      SELECT u.*,r.*,p.*
      FROM user u
      INNER JOIN user_role ur on ur.uid=u.uid
      INNER JOIN role r on r.rid=ur.rid
      INNER JOIN permission_role pr on pr.rid=r.rid
      INNER JOIN permission p on p.pid=pr.pid
      WHERE u.username=#{username}
    </select>

    <select id="findAllUsers" resultType="com.beautifulsoup.bean.db.User">
        SELECT user.* from user
    </select>
    <select id="getAllUsersCount" resultType="int">
        select count(*) from user
    </select>
    <select id="listAllUsersByPage" parameterType="int" resultType="com.beautifulsoup.bean.db.User">
        SELECT user.* from user limit #{pageNum},5
    </select>

</mapper>
